<?xml version="1.0" encoding="UTF-8" standalone="no" ?><ex4D:plugin xmlns:ex4D="http://www.4d.com/plugin">  <!--iCal-->  <ex4D:documentation name="iCal" plugin-id="20000">    <ex4D:plugin-description>      <!-- write documentation for iCal here -->	  <p>This plugin is a Mac OS utility to manipulate iCal from 4D, using the CalCalendarStore class API.</p>	      </ex4D:plugin-description>    <ex4D:commands>      <ex4D:command-group command-group-id="1" name="Event">        <ex4D:command command-id="1" name="iCal Create event">          <ex4D:command-description>            <!-- write documentation for iCal Create event here -->			<p>This command creates a new event, saves it, and returns its UUID.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="calendar" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The calendar ID to which this event belongs.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="startDate" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>The start date in text format. Use the utility command <a href="#command:5,16">iCal Make date</a> to composite date, time and timezone. Must not be after the end date.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="endDate" type="T">            <!-- write documentation for $3 (TEXT) here-->			<p>The end date in text format. Use the utility command <a href="#command:5,16">iCal Make date</a> to composite date, time and timezone. Must not be before the start date.</p>			          </ex4D:argument>          <ex4D:return-value label="event" type="T">            <!-- write documentation for return value (TEXT) here-->			<p>The event ID of the new event if the command is successful, or else an empty string.</p>			<p>The error text is logged in the console.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="2" name="iCal Set event property">          <ex4D:command-description>            <!-- write documentation for iCal Set event property here -->			<p>This command will attempt to update a property of an event and save it. Date values should be passed in textual form, which can be created with the <a href="#command:5,16">iCal Make date</a> command. Boolean values can be passes as YES/NO, TRUE/FALSE, etc.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="event" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The event ID.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="key" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>The name of the property to set.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="value" type="T">            <!-- write documentation for $3 (TEXT) here-->			<p>The new value for this property.</p>			          </ex4D:argument>          <ex4D:argument argument-id="4" label="date" type="T">            <!-- write documentation for $4 (TEXT) here-->			<p>Optional argument to specify one instance of a recurring event.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>1 for success, 0 for failure, or one of the following error codes;</p>			<ui>			<li>1025&#x20;CalCalendarNotEditableError</li>			<li>1026&#x20;CalDateInvalidError</li>			<li>1027&#x20;CalCalendarNotInRepository</li>			<li>1028&#x20;CalCalendarTitleNotUniqueError</li>											</ui>			<p>The error text is also logged in the console.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="3" name="iCal Get event property">          <ex4D:command-description>            <!-- write documentation for iCal Get event property here -->			<p>This command will attempt to read a property of an event.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="event" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The event ID.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="key" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>The name of the property to read.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="value" type="T">            <!-- write documentation for $3 (TEXT) here-->			<p>The value of this property.</p>			          </ex4D:argument>          <ex4D:argument argument-id="4" label="date" type="T">            <!-- write documentation for $4 (TEXT) here-->			<p>Optional argument to specify one instance of a recurring event.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>1 for success, 0 for failure.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="4" name="iCal Remove event">          <ex4D:command-description>            <!-- write documentation for iCal Remove event here -->			<p>This command will attempt to remove an event.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="event" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The event ID.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>1 for success, 0 for failure.</p>			          </ex4D:return-value>        </ex4D:command>      </ex4D:command-group>      <ex4D:command-group command-group-id="2" name="Task">        <ex4D:command command-id="5" name="iCal Create task">          <ex4D:command-description>            <!-- write documentation for iCal Create task here -->			<p>This command creates a new task, saves it, and returns its UUID.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="calendar" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The calendar ID to which this task belongs.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="dueDate" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>The due date in text format. Use the utility command <a href="#command:5,16">iCal Make date</a> to composite date, time and timezone. Null string equates to distant future.</p>			          </ex4D:argument>          <ex4D:return-value label="task" type="T">            <!-- write documentation for return value (TEXT) here-->			<p>The task ID of the new event if the command is successful, or else an empty string.</p>			<p>The error text is logged in the console.</p>						          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="6" name="iCal Set task property">          <ex4D:command-description>            <!-- write documentation for iCal Set task property here -->			<p>This command will attempt to update a property of a task and save it. Date values should be passed in textual form, which can be created with the <a href="#command:5,16">iCal Make date</a> command. Null string equates to distant future. Boolean values can be passes as YES/NO, TRUE/FALSE, etc.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="task" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The task ID.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="key" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>The name of the property to set.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="value" type="T">            <!-- write documentation for $3 (TEXT) here-->			<p>The new value for this property.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>1 for success, 0 for failure, or one of the following error codes;</p>			<ui>			<li>1025&#x20;CalCalendarNotEditableError</li>			<li>1026&#x20;CalDateInvalidError</li>			<li>1027&#x20;CalCalendarNotInRepository</li>			<li>1028&#x20;CalCalendarTitleNotUniqueError</li>											</ui>			<p>The error text is also logged in the console.</p>          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="7" name="iCal Get task property">          <ex4D:command-description>            <!-- write documentation for iCal Get task property here -->			<p>This command will attempt to read a property of a task.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="task" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The task ID.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="key" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>The name of the property to read.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="value" type="T">            <!-- write documentation for $3 (TEXT) here-->			<p>The value of this property.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>1 for success, 0 for failure.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="8" name="iCal Remove task">          <ex4D:command-description>            <!-- write documentation for iCal Remove task here -->			<p>This command will attempt to remove a task.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="task" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The task ID.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>1 for success, 0 for failure.</p>			          </ex4D:return-value>        </ex4D:command>      </ex4D:command-group>      <ex4D:command-group command-group-id="3" name="Calendar">        <ex4D:command command-id="9" name="iCal Create calendar">          <ex4D:command-description>            <!-- write documentation for iCal Create calendar here -->			<p>This command creates a new calendar, saves it, and returns its UUID.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="title" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The name of this calendar, which must be unique.</p>			          </ex4D:argument>		            <ex4D:argument argument-id="2" label="color" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>An optional parameter to assign a color to this calendar. If omitted, iCal will automatically choose an index color.</p>			          </ex4D:argument>		  		            <ex4D:return-value label="calendar" type="T">            <!-- write documentation for return value (TEXT) here-->			<p>The task ID of the new calendar if the command is successful, or else an empty string.</p>			<p>The error text is logged in the console.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="10" name="iCal Set calendar property">          <ex4D:command-description>            <!-- write documentation for iCal Set calendar property here -->			<p>This command will attempt to update a property of a calendar and save it. Color values should be passed in textual form, which can be created with the <a href="#command:5,18">iCal Make color</a> command.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="calendar" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The calendar ID.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="key" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>The name of the property to set.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="value" type="T">            <!-- write documentation for $3 (TEXT) here-->			<p>The new value for this property.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>1 for success, 0 for failure, or one of the following error codes;</p>			<ui>			<li>1025&#x20;CalCalendarNotEditableError</li>			<li>1026&#x20;CalDateInvalidError</li>			<li>1027&#x20;CalCalendarNotInRepository</li>			<li>1028&#x20;CalCalendarTitleNotUniqueError</li>											</ui>			<p>The error text is also logged in the console.</p>						          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="11" name="iCal Get calendar property">          <ex4D:command-description>            <!-- write documentation for iCal Get calendar property here -->			<p>This command will attempt to read a property of a calendar.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="calendar" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The calendar ID.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="key" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>The name of the property to read.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="value" type="T">            <!-- write documentation for $3 (TEXT) here-->			<p>The value of this property.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>1 for success, 0 for failure.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="12" name="iCal Remove calendar">          <ex4D:command-description>            <!-- write documentation for iCal Remove calendar here -->			<p>This command will attempt to remove a calendar.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="calendar" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The calendar ID.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>1 for success, 0 for failure.</p>			          </ex4D:return-value>        </ex4D:command>      </ex4D:command-group>      <ex4D:command-group command-group-id="4" name="Calendar Store">         <ex4D:command command-id="13" name="iCal QUERY EVENT">          <ex4D:command-description>            <!-- write documentation for iCal QUERY EVENT here -->			<p>This command returns an array of event IDs in the specified period.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="startDate" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>A start date.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="endDate" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>An end date.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="calendars" type="Y">            <!-- write documentation for $3 (ARRAY) here-->			<p>An array of calendar IDs.</p>			          </ex4D:argument>          <ex4D:argument argument-id="4" label="events" type="Y">            <!-- write documentation for $4 (ARRAY) here-->			<p>On return, an array of event IDs.</p>			          </ex4D:argument>        </ex4D:command>		        <ex4D:command command-id="14" name="iCal GET CALENDAR LIST">          <ex4D:command-description>            <!-- write documentation for iCal GET CALENDAR LIST here -->			<p>This command returns an array of all calendar IDs in the Calendar Store.</p>      		  </ex4D:command-description>          <ex4D:argument argument-id="1" label="calendarIds" type="Y">            <!-- write documentation for $1 (ARRAY) here-->			<p>On return, an array of calendar IDs.</p>          </ex4D:argument>          <ex4D:argument argument-id="2" label="calendarNames" type="Y">            <!-- write documentation for $2 (ARRAY) here-->			<p>On return, an array of calendar names.</p>          </ex4D:argument>        </ex4D:command>				<ex4D:command command-id="15" name="iCal QUERY TASK">          <ex4D:command-description>            <!-- write documentation for iCal QUERY TASK here -->			<p>This command returns an array of task IDs that are due before the specified date.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="dueDate" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>A due date. Null string will equate to no date.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="calendars" type="Y">            <!-- write documentation for $2 (ARRAY) here-->			<p>An array of calendar IDs.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="tasks" type="Y">            <!-- write documentation for $3 (ARRAY) here-->			<p>On return, an array of task IDs.</p>			          </ex4D:argument>		            <ex4D:argument argument-id="4" label="taskFlag" type="L">            <!-- write documentation for $4 (LONGINT) here-->			<p>Whether to search for complete or incomplete tasks.</p>			          </ex4D:argument>		  		          </ex4D:command>      </ex4D:command-group>      <ex4D:command-group command-group-id="5" name="Type Cast">          <ex4D:command command-id="16" name="iCal Make date">          <ex4D:command-description>            <!-- write documentation for iCal Make date here -->			<p>This utility method returns the given time, date and timezone values in ISO format.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="date" type="D">            <!-- write documentation for $1 (DATE) here-->			<p>The date component.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="time" type="H">            <!-- write documentation for $2 (TIME) here-->			<p>The time component.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="timezone" type="T">            <!-- write documentation for $3 (TEXT) here-->			<p>A timezone identifier, such as CET, JST, GMT, etc. Some verbose expressions are supported.</p>			          </ex4D:argument>          <ex4D:return-value label="xml" type="T">            <!-- write documentation for return value (TEXT) here-->			<p>The composite time in XML.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="17" name="iCal GET DATE">          <ex4D:command-description>            <!-- write documentation for iCal GET DATE here -->			<p>This command resolves the ISO time string and returns the date, time and offset seconds from GMT.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="xml" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The composite time in XML.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="date" type="D">            <!-- write documentation for $2 (DATE) here-->			<p>The date component.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="time" type="H">            <!-- write documentation for $3 (TIME) here-->			<p>The time component.</p>			          </ex4D:argument>          <ex4D:argument argument-id="4" label="offset" type="L">            <!-- write documentation for $4 (LONGINT) here-->			<p>The different to GMT in seconds.</p>			          </ex4D:argument>        </ex4D:command>        <ex4D:command command-id="18" name="iCal Make color">          <ex4D:command-description>            <!-- write documentation for iCal Make color here -->			<p>This command returns the color in XML property list format. The red, green, blue and alpha components are expressed in the range of 0.0 to 1.0.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="red" type="8">            <!-- write documentation for $1 (REAL) here-->			<p>The red component value.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="green" type="8">            <!-- write documentation for $2 (REAL) here-->			<p>The green component value.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="blue" type="8">            <!-- write documentation for $3 (REAL) here-->			<p>The blue component value.</p>			          </ex4D:argument>          <ex4D:argument argument-id="4" label="alpha" type="8">            <!-- write documentation for $4 (REAL) here-->			<p>The alpha component value.</p>			          </ex4D:argument>          <ex4D:return-value label="color" type="T">            <!-- write documentation for return value (TEXT) here-->			<p>The color XML.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="19" name="iCal GET COLOR">          <ex4D:command-description>            <!-- write documentation for iCal GET COLOR here -->			<p>This command resolves the color expressed in XML property list and returns the red, green, blue and alpha components.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="color" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The color XML.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="red" type="8">            <!-- write documentation for $2 (REAL) here-->			<p>The red component of this color.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="green" type="8">            <!-- write documentation for $3 (REAL) here-->			<p>The green component of this color.</p>			          </ex4D:argument>          <ex4D:argument argument-id="4" label="blue" type="8">            <!-- write documentation for $4 (REAL) here-->			<p>The blue component of this color.</p>			          </ex4D:argument>          <ex4D:argument argument-id="5" label="alpha" type="8">            <!-- write documentation for $5 (REAL) here-->			<p>The alpha component of this color.</p>			          </ex4D:argument>        </ex4D:command>				<ex4D:command command-id="20" name="iCal Make color from index">		<ex4D:command-description>		<!-- write documentation for iCal Make color from index here -->		<p>This command returns the color index in XML property list format. </p>		</ex4D:command-description>		<ex4D:argument argument-id="1" label="index" type="L">		<!-- write documentation for $1 (LONGINT) here-->		<p>The color index, as used in 4D Chart, a value between 1 and 256.</p>		</ex4D:argument>		<ex4D:return-value label="color" type="T">		<!-- write documentation for return value (TEXT) here-->		<p>The color XML.</p>		</ex4D:return-value>		</ex4D:command>	      </ex4D:command-group>      <ex4D:command-group command-group-id="6" name="Recurrence Rule">        <ex4D:command command-id="21" name="iCal Remove event recurrence">          <ex4D:command-description>            <!-- write documentation for iCal Remove event recurrence here -->			<p>This command removes the recurrence rule from an event.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="event" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The event ID.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>1 for success, 0 for failure.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="22" name="iCal Set event recurrence">          <ex4D:command-description>            <!-- write documentation for iCal Set event recurrence here -->			<p>This command sets the recurrence rule for an event. If successful, 1 is returned, otherwise 0.</p>			<p>See <a href="http://developer.apple.com/library/mac/#documentation/Cocoa/Reference/CalRecurrenceRule_Class/Reference/Reference.html%23//apple_ref/doc/uid/TP40004660">CalRecurrenceRule</a> for description of recurrence rules.</p>						<p>If the type is Daily and the end date is omitted, the rule is set with the interval and no end date.</p>			<p>If the type is Daily and the end date is specified, the rule is set with the interval and the end date. </p>			<p>If the type is Weekly, the end date is omitted and param1 is omitted, the rule is set with the interval and no end date. </p>			<p>If the type is Weekly, the end date is specified and param1 is omitted, the rule is set with the interval and the end date.</p>			<p>If the type is Weekly, the end date is omitted and the day numbers (between 1-7) are passed in comma delimited form in param1, the rule is set with the interval, day numbers and no end date. </p>			<p>If the type is Weekly, the end date is specified and the day numbers (between 1-7) are passed in comma delimited form in param1, the rule is set with the interval, day numbers and the end date. </p>							<p>If the type is Monthly, the end date is omitted, param1 is omitted and param2 is omitted, the rule is set with the interval and no end date. </p>			<p>If the type is Monthly, the end date is omitted, the day numbers (between 1-31) are passed in comma delimited form in param1 and param2 is omitted, the rule is set with the interval, day numbers and no end date. </p>			<p>If the type is Monthly, the end date is omitted, the day numbers (between 1-7) are passed in comma delimited form in param1 and the week numbers (between 1-4 for -1 for the last week of month) are passed in comma delimited form in param1, the rule is set with the interval, day numbers, week numbers and no end date. </p>			<p>If the type is Monthly, the end date is specified, param1 is omitted and param2 is omitted, the rule is set with the interval and the end date. </p>			<p>If the type is Monthly, the end date is specified, the day numbers (between 1-31) are passed in comma delimited form in param1 and param2 is omitted, the rule is set with the interval, day numbers and the end date. </p>			<p>If the type is Monthly, the end date is specified, the day numbers (between 1-7) are passed in comma delimited form in param1 and the week numbers (between 1-4 for -1 for the last week of month) are passed in comma delimited form in param1, the rule is set with the interval, day numbers, week numbers and the end date. </p>			<p>If the type is Yearly, the end date is omitted, param1 is omitted, param2 is omitted and param3 is omitted, the rule is set with the interval and no end date. </p>			<p>If the type is Yearly, the end date is omitted, the month numbers (between 1-12) are passed in comma delimited form in param1, param2 is omitted and param3 is omitted, the rule is set with the interval, month numbers and no end date. </p>			<p>If the type is Yearly, the end date is omitted, the month numbers (between 1-12) are passed in comma delimited form in param1, week numbers (between 1-4 for -1 for the last week of month) are passed in comma delimited form in param2 and month numbers (between 1-12) are passed in comma delimited form in param3, the rule is set with the interval, day numbers, week numbers, month numbers and no end date. </p>			<p>If the type is Yearly, the end date is specified, param1 is omitted, param2 is omitted and param3 is omitted, the rule is set with the interval and the end date. </p>			<p>If the type is Yearly, the end date is specified, the month numbers (between 1-12) are passed in comma delimited form in param1, param2 is omitted and param3 is omitted, the rule is set with the interval, month numbers and the end date. </p>			<p>If the type is Yearly, the end date is specified, the month numbers (between 1-12) are passed in comma delimited form in param1, week numbers (between 1-4 for -1 for the last week of month) are passed in comma delimited form in param2 and month numbers (between 1-12) are passed in comma delimited form in param3, the rule is set with the interval, day numbers, week numbers, month numbers and the end date. </p>																																																														          </ex4D:command-description>          <ex4D:argument argument-id="1" label="event" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The event ID.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="type" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>The recurrence type.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="interval" type="L">            <!-- write documentation for $3 (LONGINT) here-->			<p>The recurrence interval.</p>			          </ex4D:argument>          <ex4D:argument argument-id="4" label="date" type="T">            <!-- write documentation for $4 (TEXT) here-->			<p>The recurrence anchor date.</p>			          </ex4D:argument>          <ex4D:argument argument-id="5" label="param1" type="T">            <!-- write documentation for $5 (TEXT) here-->			<p>The interpretation of this argument depends on the context.</p>			          </ex4D:argument>          <ex4D:argument argument-id="6" label="param2" type="T">            <!-- write documentation for $6 (TEXT) here-->			<p>The interpretation of this argument depends on the context.</p>			          </ex4D:argument>          <ex4D:argument argument-id="7" label="param3" type="T">            <!-- write documentation for $7 (TEXT) here-->			<p>The interpretation of this argument depends on the context.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>1 for success, 0 for failure.</p>          </ex4D:return-value>        </ex4D:command>      </ex4D:command-group>      <ex4D:command-group command-group-id="7" name="Alarm">        <ex4D:command command-id="23" name="iCal Make alarm">          <ex4D:command-description>            <!-- write documentation for iCal Make alarm here -->			<p>This command creates a new alarm, saves it, and returns its properties in XML format.</p>			          </ex4D:command-description>          <ex4D:return-value label="alarm" type="T">            <!-- write documentation for return value (TEXT) here-->			<p>The alarm XML.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="24" name="iCal Get alarm property">          <ex4D:command-description>            <!-- write documentation for iCal Get alarm property here -->			<p>This command will attempt to read a property of an alarm. If successful, 1 is returned, otherwise 0. It will fail, for example, if the property name is invalid, or the alarm doesn't exist.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="alarm" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The alarm XML.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="key" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>The property name to modify.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="value" type="T">            <!-- write documentation for $3 (TEXT) here-->			<p>The new value for this property.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>1 for success, 0 for failure.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="25" name="iCal Set alarm property">          <ex4D:command-description>            <!-- write documentation for iCal Set alarm property here -->			<p>This command will attempt to update a property of an alarm and save it. If successful, 1 is returned, otherwise 0. Date values should be passed in textual form, which can be created with the <a href="#command:5,16">iCal Make date</a> command.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="alarm" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The alarm XML.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="key" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>The property name to modify.</p>			          </ex4D:argument>          <ex4D:argument argument-id="3" label="value" type="T">            <!-- write documentation for $3 (TEXT) here-->			<p>The new value for this property.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>1 for success, 0 for failure.</p>			          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="26" name="iCal Add alarm to event">          <ex4D:command-description>            <!-- write documentation for iCal Add alarm to event here -->			<p>This command adds an alarm previously create with the <a href="#command:7,23">iCal Make alarm</a> command to an event.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="event" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The event ID.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="alarm" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>The alarm XML.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>1 for success, 0 for failure, or one of the following error codes;</p>			<ui>			<li>1025&#x20;CalCalendarNotEditableError</li>			<li>1026&#x20;CalDateInvalidError</li>			<li>1027&#x20;CalCalendarNotInRepository</li>			<li>1028&#x20;CalCalendarTitleNotUniqueError</li>											</ui>			<p>The error text is also logged in the console.</p>							          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="27" name="iCal Add alarm to task">          <ex4D:command-description>            <!-- write documentation for iCal Add alarm to task here -->			<p>This command adds an alarm previously create with the <a href="#command:7,23">iCal Make alarm</a> command to a task.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="task" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The task ID.</p>			          </ex4D:argument>          <ex4D:argument argument-id="2" label="alarm" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>The alarm XML.</p>			          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>1 for success, 0 for failure, or one of the following error codes;</p>			<ui>			<li>1025&#x20;CalCalendarNotEditableError</li>			<li>1026&#x20;CalDateInvalidError</li>			<li>1027&#x20;CalCalendarNotInRepository</li>			<li>1028&#x20;CalCalendarTitleNotUniqueError</li>											</ui>			<p>The error text is also logged in the console.</p>						          </ex4D:return-value>        </ex4D:command>      </ex4D:command-group>      <ex4D:command-group command-group-id="8" name="Application">        <ex4D:command command-id="28" name="iCal TERMINATE">          <ex4D:command-description>            <!-- write documentation for iCal TERMINATE here -->			<p>This command terminates the iCal application if it is running.</p>			          </ex4D:command-description>        </ex4D:command>        <ex4D:command command-id="29" name="iCal LAUNCH">          <ex4D:command-description>            <!-- write documentation for iCal LAUNCH here -->			<p>This command launches the iCal application if it is not already running.</p>			          </ex4D:command-description>        </ex4D:command>      </ex4D:command-group>      <ex4D:command-group command-group-id="9" name="iCal Direct">        <ex4D:command command-id="30" name="iCal SHOW EVENT">          <ex4D:command-description>            <!-- write documentation for iCal SHOW EVENT here -->			<p>This command asks the iCal appliation to show the specified event.</p>          </ex4D:command-description>          <ex4D:argument argument-id="1" label="event" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The ID of the event to show.</p>          </ex4D:argument>        </ex4D:command>        <ex4D:command command-id="31" name="iCal SHOW TASK">		          <ex4D:command-description>            <!-- write documentation for iCal SHOW TASK here -->			<p>This command asks the iCal appliation to show the specified task.</p>			          </ex4D:command-description>          <ex4D:argument argument-id="1" label="task" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The ID of the task to show.</p>          </ex4D:argument>        </ex4D:command>        <ex4D:command command-id="32" name="iCal SET VIEW">          <ex4D:command-description>            <!-- write documentation for iCal SET VIEW here -->			<p>This command asks the iCal appliation to switch perspective.</p>				          </ex4D:command-description>          <ex4D:argument argument-id="1" label="view" type="L">            <!-- write documentation for $1 (LONGINT) here-->			<p>The type of view.</p>          </ex4D:argument>        </ex4D:command>        <ex4D:command command-id="33" name="iCal SHOW DATE">          <ex4D:command-description>            <!-- write documentation for iCal SHOW DATE here -->			<p>This command asks the iCal appliation to highlight the specified date.</p>          </ex4D:command-description>          <ex4D:argument argument-id="1" label="date" type="D">            <!-- write documentation for $1 (DATE) here-->			<p>The date to show.</p>          </ex4D:argument>        </ex4D:command>        <ex4D:command command-id="34" name="iCal app Get task property">          <ex4D:command-description>            <!-- write documentation for iCal app Get task property here -->			<p>This command asks the iCal appliation to read a specific task property.</p>          </ex4D:command-description>          <ex4D:argument argument-id="1" label="task" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The task ID.</p>          </ex4D:argument>          <ex4D:argument argument-id="2" label="key" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>The name of the property to get.</p>          </ex4D:argument>          <ex4D:argument argument-id="3" label="value" type="T">            <!-- write documentation for $3 (TEXT) here-->			<p>The value for this property.</p>          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>1 for success, 0 for failure.</p>          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="35" name="iCal app Get event property">          <ex4D:command-description>            <!-- write documentation for iCal app Get event property here -->			<p>This command asks the iCal appliation to read a specific event property.</p>          </ex4D:command-description>          <ex4D:argument argument-id="1" label="event" type="T">            <!-- write documentation for $1 (TEXT) here-->			<p>The event ID.</p>          </ex4D:argument>          <ex4D:argument argument-id="2" label="key" type="T">            <!-- write documentation for $2 (TEXT) here-->			<p>The name of the property to get.</p>          </ex4D:argument>          <ex4D:argument argument-id="3" label="value" type="T">            <!-- write documentation for $3 (TEXT) here-->			<p>The value for this property.</p>          </ex4D:argument>          <ex4D:return-value label="success" type="L">            <!-- write documentation for return value (LONGINT) here-->			<p>1 for success, 0 for failure.</p>          </ex4D:return-value>        </ex4D:command>      </ex4D:command-group>      <ex4D:command-group command-group-id="10" name="Notification">        <ex4D:command command-id="36" name="iCal Set notification method">          <ex4D:command-description>            <!-- write documentation for iCal Set notification method here -->          </ex4D:command-description>          <ex4D:argument argument-id="1" label="" type="T">            <!-- write documentation for $1 (TEXT) here-->          </ex4D:argument>          <ex4D:return-value label="" type="L">            <!-- write documentation for return value (LONGINT) here-->          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="37" name="iCal Get notification method">          <ex4D:command-description>            <!-- write documentation for iCal Get notification method here -->          </ex4D:command-description>          <ex4D:argument argument-id="1" label="" type="T">            <!-- write documentation for $1 (TEXT) here-->          </ex4D:argument>          <ex4D:return-value label="" type="L">            <!-- write documentation for return value (LONGINT) here-->          </ex4D:return-value>        </ex4D:command>      </ex4D:command-group>      <ex4D:command-group command-group-id="11" name="Alarm II">        <ex4D:command command-id="38" name="iCal Get event alarm">          <ex4D:command-description>            <!-- write documentation for iCal Get event alarm here -->          </ex4D:command-description>          <ex4D:argument argument-id="1" label="" type="T">            <!-- write documentation for $1 (TEXT) here-->          </ex4D:argument>          <ex4D:argument argument-id="2" label="" type="L">            <!-- write documentation for $2 (LONGINT) here-->          </ex4D:argument>          <ex4D:argument argument-id="3" label="" type="T">            <!-- write documentation for $3 (TEXT) here-->          </ex4D:argument>          <ex4D:return-value label="" type="L">            <!-- write documentation for return value (LONGINT) here-->          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="39" name="iCal Count event alarms">          <ex4D:command-description>            <!-- write documentation for iCal Count event alarms here -->          </ex4D:command-description>          <ex4D:argument argument-id="1" label="" type="T">            <!-- write documentation for $1 (TEXT) here-->          </ex4D:argument>          <ex4D:argument argument-id="2" label="" type="L">            <!-- write documentation for $2 (LONGINT) here-->          </ex4D:argument>          <ex4D:return-value label="" type="L">            <!-- write documentation for return value (LONGINT) here-->          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="40" name="iCal Remove event alarm">          <ex4D:command-description>            <!-- write documentation for iCal Remove event alarm here -->          </ex4D:command-description>          <ex4D:argument argument-id="1" label="" type="T">            <!-- write documentation for $1 (TEXT) here-->          </ex4D:argument>          <ex4D:argument argument-id="2" label="" type="L">            <!-- write documentation for $2 (LONGINT) here-->          </ex4D:argument>          <ex4D:return-value label="" type="L">            <!-- write documentation for return value (LONGINT) here-->          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="41" name="iCal Set event alarm">          <ex4D:command-description>            <!-- write documentation for iCal Set event alarm here -->          </ex4D:command-description>          <ex4D:argument argument-id="1" label="" type="T">            <!-- write documentation for $1 (TEXT) here-->          </ex4D:argument>          <ex4D:argument argument-id="2" label="" type="L">            <!-- write documentation for $2 (LONGINT) here-->          </ex4D:argument>          <ex4D:argument argument-id="3" label="" type="T">            <!-- write documentation for $3 (TEXT) here-->          </ex4D:argument>          <ex4D:return-value label="" type="L">            <!-- write documentation for return value (LONGINT) here-->          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="42" name="iCal Count task alarms">          <ex4D:command-description>            <!-- write documentation for iCal Count task alarms here -->          </ex4D:command-description>          <ex4D:argument argument-id="1" label="" type="T">            <!-- write documentation for $1 (TEXT) here-->          </ex4D:argument>          <ex4D:argument argument-id="2" label="" type="L">            <!-- write documentation for $2 (LONGINT) here-->          </ex4D:argument>          <ex4D:return-value label="" type="L">            <!-- write documentation for return value (LONGINT) here-->          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="43" name="iCal Get task alarm">          <ex4D:command-description>            <!-- write documentation for iCal Get task alarm here -->          </ex4D:command-description>          <ex4D:argument argument-id="1" label="" type="T">            <!-- write documentation for $1 (TEXT) here-->          </ex4D:argument>          <ex4D:argument argument-id="2" label="" type="L">            <!-- write documentation for $2 (LONGINT) here-->          </ex4D:argument>          <ex4D:argument argument-id="3" label="" type="T">            <!-- write documentation for $3 (TEXT) here-->          </ex4D:argument>          <ex4D:return-value label="" type="L">            <!-- write documentation for return value (LONGINT) here-->          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="44" name="iCal Remove task alarm">          <ex4D:command-description>            <!-- write documentation for iCal Remove task alarm here -->          </ex4D:command-description>          <ex4D:argument argument-id="1" label="" type="T">            <!-- write documentation for $1 (TEXT) here-->          </ex4D:argument>          <ex4D:argument argument-id="2" label="" type="L">            <!-- write documentation for $2 (LONGINT) here-->          </ex4D:argument>          <ex4D:return-value label="" type="L">            <!-- write documentation for return value (LONGINT) here-->          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="45" name="iCal Set task alarm">          <ex4D:command-description>            <!-- write documentation for iCal Set task alarm here -->          </ex4D:command-description>          <ex4D:argument argument-id="1" label="" type="T">            <!-- write documentation for $1 (TEXT) here-->          </ex4D:argument>          <ex4D:argument argument-id="2" label="" type="L">            <!-- write documentation for $2 (LONGINT) here-->          </ex4D:argument>          <ex4D:argument argument-id="3" label="" type="T">            <!-- write documentation for $3 (TEXT) here-->          </ex4D:argument>          <ex4D:return-value label="" type="L">            <!-- write documentation for return value (LONGINT) here-->          </ex4D:return-value>        </ex4D:command>      </ex4D:command-group>	  <ex4D:command-group command-group-id="12" name="Timezone">        <ex4D:command command-id="46" name="iCal TIMEZONE LIST">          <ex4D:command-description>            <!-- write documentation for iCal TIMEZONE LIST here -->          </ex4D:command-description>          <ex4D:argument argument-id="1" label="" type="Y">            <!-- write documentation for $1 (ARRAY) here-->          </ex4D:argument>        </ex4D:command>        <ex4D:command command-id="47" name="iCal Get timezone info">          <ex4D:command-description>            <!-- write documentation for iCal Get timezone info here -->          </ex4D:command-description>          <ex4D:argument argument-id="1" label="" type="D">            <!-- write documentation for $1 (DATE) here-->          </ex4D:argument>          <ex4D:argument argument-id="2" label="" type="H">            <!-- write documentation for $2 (TIME) here-->          </ex4D:argument>          <ex4D:argument argument-id="3" label="" type="T">            <!-- write documentation for $3 (TEXT) here-->          </ex4D:argument>          <ex4D:argument argument-id="4" label="" type="L">            <!-- write documentation for $4 (LONGINT) here-->          </ex4D:argument>          <ex4D:argument argument-id="5" label="" type="L">            <!-- write documentation for $5 (LONGINT) here-->          </ex4D:argument>          <ex4D:argument argument-id="6" label="" type="D">            <!-- write documentation for $6 (DATE) here-->          </ex4D:argument>          <ex4D:argument argument-id="7" label="" type="H">            <!-- write documentation for $7 (TIME) here-->          </ex4D:argument>          <ex4D:return-value label="" type="L">            <!-- write documentation for return value (LONGINT) here-->          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="48" name="iCal Get timezone for offset">          <ex4D:command-description>            <!-- write documentation for iCal Get timezone for offset here -->          </ex4D:command-description>          <ex4D:argument argument-id="1" label="" type="L">            <!-- write documentation for $1 (LONGINT) here-->          </ex4D:argument>          <ex4D:return-value label="" type="T">            <!-- write documentation for return value (TEXT) here-->          </ex4D:return-value>        </ex4D:command>        <ex4D:command command-id="49" name="iCal Get system timezone">          <ex4D:command-description>            <!-- write documentation for iCal Get system timezone here -->          </ex4D:command-description>          <ex4D:return-value label="" type="T">            <!-- write documentation for return value (TEXT) here-->          </ex4D:return-value>        </ex4D:command>      </ex4D:command-group>    </ex4D:commands>    <ex4D:constants>      <ex4D:constant-group constant-group-id="1" name="iCal Event Properties" number="20000">        <ex4D:constant constant-id="1" name="Event isAllDay" type="S" value="isAllDay">          <!-- write documentation for Event isAllDay (isAllDay) here-->        </ex4D:constant>        <ex4D:constant constant-id="2" name="Event location" type="S" value="location">          <!-- write documentation for Event location (location) here-->        </ex4D:constant>        <ex4D:constant constant-id="3" name="Event occurrence" type="S" value="occurrence">          <!-- write documentation for Event occurrence (occurrence) here-->        </ex4D:constant>        <ex4D:constant constant-id="4" name="Event startDate" type="S" value="startDate">          <!-- write documentation for Event startDate (startDate) here-->        </ex4D:constant>        <ex4D:constant constant-id="5" name="Event endDate" type="S" value="endDate">          <!-- write documentation for Event endDate (endDate) here-->        </ex4D:constant>        <ex4D:constant constant-id="6" name="Event attendees" type="S" value="attendees">          <!-- write documentation for Event attendees (attendees) here-->        </ex4D:constant>        <ex4D:constant constant-id="7" name="Event isDetached" type="S" value="isDetached">          <!-- write documentation for Event isDetached (isDetached) here-->        </ex4D:constant>        <ex4D:constant constant-id="8" name="Event calendar" type="S" value="calendar">          <!-- write documentation for Event calendar (calendar) here-->        </ex4D:constant>        <ex4D:constant constant-id="9" name="Event dateStamp" type="S" value="dateStamp">          <!-- write documentation for Event dateStamp (dateStamp) here-->        </ex4D:constant>        <ex4D:constant constant-id="10" name="Event notes" type="S" value="notes">          <!-- write documentation for Event notes (notes) here-->        </ex4D:constant>        <ex4D:constant constant-id="11" name="Event title" type="S" value="title">          <!-- write documentation for Event title (title) here-->        </ex4D:constant>        <ex4D:constant constant-id="12" name="Event url" type="S" value="url">          <!-- write documentation for Event url (url) here-->        </ex4D:constant>        <ex4D:constant constant-id="13" name="Event hasAlarm" type="S" value="hasAlarm">          <!-- write documentation for Event hasAlarm (hasAlarm) here-->        </ex4D:constant>        <ex4D:constant constant-id="14" name="Event nextAlarmDate" type="S" value="nextAlarmDate">          <!-- write documentation for Event nextAlarmDate (nextAlarmDate) here-->        </ex4D:constant>      </ex4D:constant-group>      <ex4D:constant-group constant-group-id="2" name="iCal Calendar Properties" number="20001">        <ex4D:constant constant-id="1" name="Calendar color" type="S" value="color">          <!-- write documentation for Calendar color (color) here-->        </ex4D:constant>        <ex4D:constant constant-id="2" name="Calendar isEditable" type="S" value="isEditable">          <!-- write documentation for Calendar isEditable (isEditable) here-->        </ex4D:constant>        <ex4D:constant constant-id="3" name="Calendar notes" type="S" value="notes">          <!-- write documentation for Calendar notes (notes) here-->        </ex4D:constant>        <ex4D:constant constant-id="4" name="Calendar title" type="S" value="title">          <!-- write documentation for Calendar title (title) here-->        </ex4D:constant>        <ex4D:constant constant-id="5" name="Calendar type" type="S" value="type">          <!-- write documentation for Calendar type (type) here-->        </ex4D:constant>      </ex4D:constant-group>      <ex4D:constant-group constant-group-id="3" name="iCal Task Properties" number="20002">        <ex4D:constant constant-id="1" name="Task dueDate" type="S" value="dueDate">          <!-- write documentation for Task dueDate (dueDate) here-->        </ex4D:constant>        <ex4D:constant constant-id="2" name="Task isCompleted" type="S" value="isCompleted">          <!-- write documentation for Task isCompleted (isCompleted) here-->        </ex4D:constant>        <ex4D:constant constant-id="3" name="Task priority" type="S" value="priority">          <!-- write documentation for Task priority (priority) here-->        </ex4D:constant>        <ex4D:constant constant-id="4" name="Task completedDate" type="S" value="completedDate">          <!-- write documentation for Task completedDate (completedDate) here-->        </ex4D:constant>        <ex4D:constant constant-id="5" name="Task calendar" type="S" value="calendar">          <!-- write documentation for Task calendar (calendar) here-->        </ex4D:constant>        <ex4D:constant constant-id="6" name="Task dateStamp" type="S" value="dateStamp">          <!-- write documentation for Task dateStamp (dateStamp) here-->        </ex4D:constant>        <ex4D:constant constant-id="7" name="Task title" type="S" value="title">          <!-- write documentation for Task title (title) here-->        </ex4D:constant>        <ex4D:constant constant-id="8" name="Task url" type="S" value="url">          <!-- write documentation for Task url (url) here-->        </ex4D:constant>      </ex4D:constant-group>      <ex4D:constant-group constant-group-id="4" name="iCal Alarm Properties" number="20003">        <ex4D:constant constant-id="1" name="Alarm absoluteTrigger" type="S" value="absoluteTrigger">          <!-- write documentation for Alarm absoluteTrigger (absoluteTrigger) here-->        </ex4D:constant>        <ex4D:constant constant-id="2" name="Alarm action" type="S" value="action">          <!-- write documentation for Alarm action (action) here-->        </ex4D:constant>        <ex4D:constant constant-id="3" name="Alarm emailAddress" type="S" value="emailAddress">          <!-- write documentation for Alarm emailAddress (emailAddress) here-->        </ex4D:constant>        <ex4D:constant constant-id="4" name="Alarm relativeTrigger" type="S" value="relativeTrigger">          <!-- write documentation for Alarm relativeTrigger (relativeTrigger) here-->        </ex4D:constant>        <ex4D:constant constant-id="5" name="Alarm sound" type="S" value="sound">          <!-- write documentation for Alarm sound (sound) here-->        </ex4D:constant>        <ex4D:constant constant-id="6" name="Alarm url" type="S" value="url">          <!-- write documentation for Alarm url (url) here-->        </ex4D:constant>      </ex4D:constant-group>      <ex4D:constant-group constant-group-id="5" name="iCal Recurrence Rules" number="20004">        <ex4D:constant constant-id="1" name="Recurrence Daily" type="S" value="Daily">          <!-- write documentation for Recurrence Daily (Daily) here-->        </ex4D:constant>        <ex4D:constant constant-id="2" name="Recurrence Weekly" type="S" value="Weekly">          <!-- write documentation for Recurrence Weekly (Weekly) here-->        </ex4D:constant>        <ex4D:constant constant-id="3" name="Recurrence Monthly" type="S" value="Monthly">          <!-- write documentation for Recurrence Monthly (Monthly) here-->        </ex4D:constant>      </ex4D:constant-group>      <ex4D:constant-group constant-group-id="6" name="iCal View Modes" number="20005">        <ex4D:constant constant-id="1" name="Day View" type="L" value="0">          <!-- write documentation for Day View (0) here-->        </ex4D:constant>        <ex4D:constant constant-id="2" name="Week View" type="L" value="1">          <!-- write documentation for Week View (1) here-->        </ex4D:constant>        <ex4D:constant constant-id="3" name="Month View" type="L" value="2">          <!-- write documentation for Month View (2) here-->        </ex4D:constant>      </ex4D:constant-group>      <ex4D:constant-group constant-group-id="7" name="iCal App Event Properties" number="20006">        <ex4D:constant constant-id="1" name="Event description" type="S" value="notes">          <!-- write documentation for Event description (notes) here-->        </ex4D:constant>        <ex4D:constant constant-id="2" name="Event start date" type="S" value="startDate">          <!-- write documentation for Event start date (startDate) here-->        </ex4D:constant>        <ex4D:constant constant-id="3" name="Event end date" type="S" value="endDate">          <!-- write documentation for Event end date (endDate) here-->        </ex4D:constant>        <ex4D:constant constant-id="4" name="Event allday event" type="S" value="isAllDay">          <!-- write documentation for Event allday event (isAllDay) here-->        </ex4D:constant>        <ex4D:constant constant-id="5" name="Event recurrence" type="S" value="recurrence">          <!-- write documentation for Event recurrence (recurrence) here-->        </ex4D:constant>        <ex4D:constant constant-id="6" name="Event stamp date" type="S" value="dateStamp">          <!-- write documentation for Event stamp date (dateStamp) here-->        </ex4D:constant>        <ex4D:constant constant-id="7" name="Event sequence" type="S" value="sequence">          <!-- write documentation for Event sequence (sequence) here-->        </ex4D:constant>        <ex4D:constant constant-id="8" name="Event status" type="S" value="status">          <!-- write documentation for Event status (status) here-->        </ex4D:constant>        <ex4D:constant constant-id="9" name="Event summary" type="S" value="title">          <!-- write documentation for Event summary (title) here-->        </ex4D:constant>        <ex4D:constant constant-id="10" name="Event location" type="S" value="location">          <!-- write documentation for Event location (location) here-->        </ex4D:constant>        <ex4D:constant constant-id="11" name="Event url" type="S" value="url">          <!-- write documentation for Event url (url) here-->        </ex4D:constant>      </ex4D:constant-group>      <ex4D:constant-group constant-group-id="8" name="iCal App Task Properties" number="20007">        <ex4D:constant constant-id="1" name="Task completion date" type="S" value="completedDate">          <!-- write documentation for Task completion date (completedDate) here-->        </ex4D:constant>        <ex4D:constant constant-id="2" name="Task due date" type="S" value="dueDate">          <!-- write documentation for Task due date (dueDate) here-->        </ex4D:constant>        <ex4D:constant constant-id="3" name="Task priority" type="S" value="priority">          <!-- write documentation for Task priority (priority) here-->        </ex4D:constant>        <ex4D:constant constant-id="4" name="Task sequence" type="S" value="sequence">          <!-- write documentation for Task sequence (sequence) here-->        </ex4D:constant>        <ex4D:constant constant-id="5" name="Task stamp date" type="S" value="stampDate">          <!-- write documentation for Task stamp date (stampDate) here-->        </ex4D:constant>        <ex4D:constant constant-id="6" name="Task summary" type="S" value="title">          <!-- write documentation for Task summary (title) here-->        </ex4D:constant>        <ex4D:constant constant-id="7" name="Task description" type="S" value="notes">          <!-- write documentation for Task description (notes) here-->        </ex4D:constant>        <ex4D:constant constant-id="8" name="Task url" type="S" value="url">          <!-- write documentation for Task url (url) here-->        </ex4D:constant>      </ex4D:constant-group>      <ex4D:constant-group constant-group-id="9" name="iCal Notification Types" number="20008">        <ex4D:constant constant-id="1" name="Calendar Notification" type="S" value="Calendar Notification">          <!-- write documentation for Calendar Notification (Calendar Notification) here-->        </ex4D:constant>        <ex4D:constant constant-id="2" name="Event Notification" type="S" value="Event Notification">          <!-- write documentation for Event Notification (Event Notification) here-->        </ex4D:constant>        <ex4D:constant constant-id="3" name="Task Notification" type="S" value="Task Notification">          <!-- write documentation for Task Notification (Task Notification) here-->        </ex4D:constant>      </ex4D:constant-group>      <ex4D:constant-group constant-group-id="10" name="iCal Task Flags" number="20009">        <ex4D:constant constant-id="1" name="Task incomplete" type="L" value="0">          <!-- write documentation for Task incomplete (0) here-->        </ex4D:constant>        <ex4D:constant constant-id="2" name="Task complete" type="L" value="1">          <!-- write documentation for Task complete (1) here-->        </ex4D:constant>      </ex4D:constant-group>    </ex4D:constants>  </ex4D:documentation></ex4D:plugin>